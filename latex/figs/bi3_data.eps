%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.41.0 (http://poppler.freedesktop.org)
%%Creator: MATLAB, The MathWorks, Inc. Version 8.1.0.604 (R2013a). Operating System: Linux 3.13.0-52-generic #86-Ubuntu SMP Mon May 4 04:32:59 UTC 2015 x86_64.
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 360 201
%%HiResBoundingBox: 0 0 360 201
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font WYROHS+Helvetica
%!FontType1-1.0: WYROHS+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /WYROHS+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 677 741] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 45 /minus put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 67 /C put
dup 70 /F put
dup 73 /I put
dup 78 /N put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74E937CCBD27A32CB3BCF5FE6
C45D34D885BFB86FF350A90A5782FFBE48234DAA06C5D150B2EC09D77404EC3D
B43160154612D64E10BACD89A617F4DEA98A315408AD9D54BEFC25C4416E4A72
6632CCC5C9AF2C341A0AE136E29843D68B1251F5FA845C13AC8B7DE251BFFEA8
A8EDD813DCEE74501D2E689B7E24D26500F2D6EE48A8B8000CB839582669CE55
2E2326EC60875EE39AF01AD6CB90C35E45C7457BC5D6ED65CBCBD4FA5EB16A77
571D6056EF06593307E91C932C80BDEC03A60E710A7D70C7A287CDE8413BC3F5
CEDA7A1200D884A5787BFF2ABF6018FB1F389CAC43166A574B354609C707B79D
3A5759ABA529217C2234B76813451DF18EEE09F6691E731ADF46EC79A3D568E4
38D0C0C60ABB07C653C20BBEA152823AEF6564A8965ADAB057A3D933B60D155D
0090428FABEA54DF6E6DB903297E15C143AE193AE7B7759D5D4AD4C4F557A900
6D044C02117A7BC18664B7D8A4F5D3E21EFCDD079FD754731C329D682615FE4E
6F8D5C04525A439DDDBAB3643C070D78E91A4FF16C3B00D840473BA147F2B5E6
C1A86279F529040F79609BCDB452CCCCAA1631279AEDB68A830C54BA59008EE6
885994C373E2B7AB69AFA14A4E8BF9F847489B20619BD81862B8396108E0A416
12790351D377CAE51539D55E120E0E66FBC9D00BEAC382E4552858E574BF2390
466D36915433DB4C8F93F0D5EAAF3C6EF022AEC96742DBC81ED0220C96068F7A
07A14A18EB852F4C810105BBBCBEBC37EFBAC129CC1ABAC79E9E5444E4ECFC50
E5A64D88EBF1ABD5BBB89BE90B7C2AFDD5B905FF6842FDDDCB8CDEE05299040E
294F38748B0C82451FA83BD28625B84F59E555333761F784EE1B23DA4A998AA4
1E8FA3ED90531C58CEA6D63F57C3F9F143837E9826143722A0964A7882FFD63C
0D1F9086888F63DE869DC61CD8A587D7677F4E15AFFB8F2591AEBD931835DCFC
A35A590A044067AC349D932A373D59E0B7DCCF7D563F2F7B1020A2A33FA2E85B
B2420CA686C9CF93B0EE8CEEF26BB3D8D24A2D6B462B8EADCA22F04F8E09262C
A8DB22E37A104B7BC5A4A18B5623E472AE5680A3DA736300971C8DD6118AD4D5
3F34FE5039B200F7FC9ABCD63978C85A36335A4E120586DABA67746551AC5F33
26062DF99C5EE9F808D19C8FD6C23303D021DCC0DEE4D5BD12BC913B9B3D4202
FE50801EA86A335FFD8054672276B6A65B257E743B31CD6AF9096423145D4BB4
3895847D5DCBE40C7F5D80869344935207DE7AD6D0BD9AB2C16AAC70C9E49508
877EF9BD4E1507B2D137DF4352F7D5C7EA871136B8BA0EBB854EA5283405EBF6
E54996637382FE868D5DB9F9C897778E7016CD475361E9AF3CD244A7023ED09C
DE511B2759D436D813C84FC3CBBE09F342B0396636E9422F51C2747C5C1E8258
FA02D7FC46FD6B4D707F22A50B11577FAA7CB1BF160A1C57D1C7F0DFD0BE8E0D
D874832706BEC875CF3A70F32BBC330DF635F84A863C7E14FB3EC487A1B87F36
323047A16FA49D0F9A133A3B501BDA44F5F6BBC319C20EC2E3DEF5A05E658115
E38DF8141E049406E90BBC655EB5E1E7BA9A81F4A5757FA7A9DD2DA75CF6FA1A
D9F25875F883CD14DF838D83A9B0769372D9B114A376265796853E66C4D927B8
4CBB77C99A5B40562CB2EB1B89F4975893D3D653B727EBF75787012CA7FC060D
CB5E7A6EDFF23B5CEA02B50326DB88ABD50BC0604E5D1FA379C0D98ED6E5B802
026220AF1F94B200D0C3B79188E9E5364BD0867069375FD178DDBAF6A9688D2A
AFE79717457839D800BD5DCDCD49403A7A6F6D45683059EDA291EC0E18F1CBC6
C5A0E9CE0CBD62DAA4CB55A2A30CCB620FFD09A6DC912BFAB38F74152C103675
80F836F825164B0777A229164C3B0FEF6E8B6D1DE0CB6FD51EC3E2B55BE2A2F1
5F2302F09013708DFF6CD8541F469158E934EB4B2DB6D22BD4C652A1FC6D0441
70273709732A1757939CFA7314F16B7A27976F9EB722C0824518330534E160FE
A8CC48C432BA17BB3361E32C1056E62AB2AB85AE71A573859D418D6E93F00525
84168B30253C5F176FC7F11AF2CA88E01939595648F248D62AA37A4E928FA41E
AD4094AB407C85F0273AA6482499A4AD5B23CE036F04AE0F6166B8E82133EAA0
D08903E57609F8192B690A940C955CFD398EBEEB9426543E637F0DC5E6DE48C9
6E5607F1776E2008148E1802F2A6F1C4A678CEE00C05CDA966B6C6054415F6DA
8B90B504306ED77BCD6A7C80C06CB3638434351E8831EE69F2354F2473516256
7E9CD6D165E91FE4636908F37890303664F76A80A6DB94D8C530D891531080B2
51DD2F3A61EFB060460510B2116A6C5633432BA070467F236176282DC77C9E64
E00CE501A61E1043987880F8A552875A0E5D91A2E5462060943DD54412686D8B
ED867FFD67B3A142396B44579542C422EE413DDEE4992380D718E3ED3B0647A9
2E2D1A68A14789B8C87E3F96C11FB13DD54328ED40C33765AD5EE0DA48551673
26455F7EA9C158F7971ADA9F3F620A1EB75C159AA13308F473EDC0B24A04095E
1D8221B843CDE9CC9C904546F8D32EE0686BD1EAC4DF36CD4DB4B7A6071E732B
DC694BE9708A838DB795591AFADBDA705ED4234249A72ABF81A6FB8521A21601
776C48E4C6B1D6795C24A00EFB2C93CB21812D6B5A782E86378704A930E46BF3
5ADDA198C7967C566D08A3140EA3805855E66851D794AA21BDB6BD76FA73DBDF
D81BEE9FF38BB4C9C2DD5BB6DBE138E8E1D70A3E3E32FF9164E59B14216D180F
DA64C379EBEE35412B9688C4016CF1C5A39EBB31A93929CFB54E74EE0C0CBE54
7132ABB9B69B3B191197AD7DBDB86A7F39990AA7C3666B7048E1EFC95427525E
08D589CC120D9455C80730CFB210D9E37385445B15F818D4836B3DAE5D4D21BA
B0F3E26CC0C3AD9FBC151F1E3A4F04AAEC2210917EE1591BF91844B5D59BA75B
3368C76F522D21734088BC9D9AF3C480E9D7CE0EAF67C9968A2C6BDE96DCF5B4
1E796ECFF1677979C6697AFAEC21A5CB506BC16F446B38F17537B874CAE5CE7E
2BB54660B610050C2BA90F45EF66B60D63425EA2E4E146654A8807FEF896EC19
F1DF2DE9BDF8558932FCCA768E4B1B3B4DD779CD0E5145811DFDCD8D16F18AC5
3BBF23E1687AC01424F1F609B27DB7B6A5D6A9FBC25B02D413E3A7CC38011492
84CF438A12176B366B89FA1876C64227F97586162A161204FA55BA5CB7001A48
132C8B194EC132C9C79BE3F3D8E56AE162CAAFE55FEDC8E36FCADE2C33175FF7
EC0BFDAF09FFE36C981D21FFE58359AB7AA688DAADE4B2E77454CD7C169A52D7
29EDADF165806AF05D50459311B1F7DBE2DBE06D74DCD3EF3D9B2490B8AB6E88
CCCC10EB290178D7374900989C7061DB8AEA06D745787EC87CF69E33BDDD5F24
DDA742DF3746DCAA8054BED4D4B676D3F6472F42B17BE60C9627F46BEE5D42B0
9861C1BEF5165C3A3745A756604C590707A7215253EDDDC9D81F1FB430982614
E03529BD6EFC17F38B030126FA3707CCEDDC422DAED1BCA266BEF437AEB2B210
52D9D9617FF433AF3340C7C074E8947540A26CB3F0DFB25AEBE56F7BF13E17E8
55F289B140A479DA640AE2DA105FFD3A3FDAC50A29927D164DD3A99EC3A7EA9F
8EDA1C336A30E6F79A63EFE28C39721BCDC83740E8D24A37AA9654CE983157D6
5B069B7D575861C864F831043E3A5119D7C24B661750C410DE4724573172679A
E54B8AC856F5832FD6644E3EAB4923AC6688FC3A5AD663E26F65EBC103714BDD
7D44D55FC1360910D55743F4A8C2B740210B06EAA6B2CDF471400BACF7B981BA
1C21ACB99082560EC8B8624491FD4F949DE237F90DEB2A8CD5485BB54ACEF5AA
202A2DBD164E7A350364ED71BD85E5B9FB85B7422BE2FE94CDA2C9E77B8480C8
7776EC5877862AE4B5972A67EE83DA1A9B24725B3518C483C11E1DCB97D3A8DC
500EFF874EFD47AAB65F0EF1347C8E4A1DACA6D0467038BFB5C6309F9231C0A9
32846E7C2BAF23067A546D7836557ECCDC1BFE51A2D1339A46219616E19A4EAD
4BEE02A71AFE101D729BF01268025D7D682075CA0685B5796844CEA0E902DE23
2B00BBC4A8F121ACEB9E770EAB0B0FB203C2041D6AAF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /WYROHS+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/minus/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 360 201 re
W
q
q
[0.1 0 0 0.1 0 0] cm
q
0 9.16797 3600 2000.83 re
W
/DeviceGray {} cs
[1] sc
0 8.33203 3600.83 2001.67 re
f
468.332 229.168 2790 1630.83 re
f*
20 w
1 j
/DeviceGray {} CS
[1] SC
468.332 229.168 2789.998 1630.832 re
S
Q
q
468.332 228.332 2790.84 1631.67 re
W
/DeviceRGB {} cs
[0 0 0.5625] sc
611.668 229.168 135 1060.83 re
f*
1541.67 229.168 135 1386.66 re
f*
2471.67 229.168 135 856.664 re
f*
5 w
1 j
/DeviceGray {} CS
[0] SC
468.332 229.168 m
3258.33 229.168 l
S
/DeviceRGB {} cs
[0 0.875 1] sc
780.832 229.168 135 951.664 re
f*
1710.83 229.168 135 747.5 re
f*
2640.83 229.168 135 611.664 re
f*
/DeviceRGB {} cs
[1 0.8125 0] sc
950 229.168 135 95.832 re
f*
1880 229.168 135 544.164 re
f*
2810 229.168 135 177.5 re
f*
/DeviceRGB {} cs
[0.5 0 0] sc
1119.17 229.168 135 204.164 re
f*
2049.17 229.168 135 720.832 re
f*
2979.17 229.168 135 285.832 re
f*
Q
q
0 9.16797 3600 2000.83 re
W
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 64 133.583] Tm
0 0 Td
/F8_0 10 Tf
(78)
[5.56
0
5.56
0] Tj
93 32.6668 Td
(102)
[5.56
0
5.56
0
5.56
0] Tj
186 -20.3332 Td
(63)
[5.56
0
5.56
0] Tj
17.167 -10.8332 Td
(70)
[5.56
0
5.56
0] Tj
110.167 -31.25 Td
(55)
[5.56
0
5.56
0] Tj
203.167 -44.8332 Td
(45)
[5.56
0
5.56
0] Tj
34.417 -96.4164 Td
(7)
[5.56
0] Tj
127.417 -51.5832 Td
(40)
[5.56
0
5.56
0] Tj
220.417 -88.3332 Td
(13)
[5.56
0
5.56
0] Tj
51.583 -85.5832 Td
(15)
[5.56
0
5.56
0] Tj
144.583 -33.9164 Td
(53)
[5.56
0
5.56
0] Tj
237.583 -77.4164 Td
(21)
[5.56
0
5.56
0] Tj
[0 1 -1 0 20.4168 81] Tm
0 0 Td
/F8_0 10 Tf
(Frequency)
[6.11
0
3.33
0
5.56
0
5.56
0
5.56
0
5.56
0
5.56
0
5
0
5
0] Tj
[1 0 0 1 45.4168 19.3332] Tm
0 0 Td
/F8_0 10 Tf
( )
[2.78
0] Tj
279.083 163.167 Td
( )
[2.78
0] Tj
Q
20 w
1 j
/DeviceGray {} CS
[0] SC
468.332 229.168 m
3258.33 229.168 l
S
468.332 1860 m
3258.33 1860 l
S
468.332 229.168 m
468.332 1860 l
S
3258.33 229.168 m
3258.33 1860 l
S
468.332 229.168 m
3258.33 229.168 l
S
468.332 229.168 m
468.332 1860 l
S
933.332 229.168 m
933.332 257.5 l
S
933.332 1860 m
933.332 1832.5 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 69.75 10.8332] Tm
0 0 Td
/F8_0 10 Tf
(Consistent)
[7.22
0
5.56
0
5.56
0
5
0
2.22
0
5
0
2.78
0
5.56
0
5.56
0
2.78
0] Tj
Q
1863.33 229.168 m
1863.33 257.5 l
S
1863.33 1860 m
1863.33 1832.5 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 159.667 10.8332] Tm
0 0 Td
/F8_0 10 Tf
(Inconsistent)
[2.78
0
5.56
0
5
0
5.56
0
5.56
0
5
0
2.22
0
5
0
2.78
0
5.56
0
5.56
0
2.78
0] Tj
Q
2793.33 229.168 m
2793.33 257.5 l
S
2793.33 1860 m
2793.33 1832.5 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 263.333 10.8332] Tm
0 0 Td
/F8_0 10 Tf
(Neutral)
[7.22
0
5.56
0
5.56
0
2.78
0
3.33
0
5.56
0
2.22
0] Tj
Q
468.332 229.168 m
495.832 229.168 l
S
3258.33 229.168 m
3230 229.168 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 38.4168 19.25] Tm
0 0 Td
/F8_0 10 Tf
(0)
[5.56
0] Tj
Q
468.332 501.668 m
495.832 501.668 l
S
3258.33 501.668 m
3230 501.668 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 32.8332 46.5] Tm
0 0 Td
/F8_0 10 Tf
(20)
[5.56
0
5.56
0] Tj
Q
468.332 773.332 m
495.832 773.332 l
S
3258.33 773.332 m
3230 773.332 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 32.8332 73.6668] Tm
0 0 Td
/F8_0 10 Tf
(40)
[5.56
0
5.56
0] Tj
Q
468.332 1045 m
495.832 1045 l
S
3258.33 1045 m
3230 1045 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 32.8332 100.833] Tm
0 0 Td
/F8_0 10 Tf
(60)
[5.56
0
5.56
0] Tj
Q
468.332 1316.67 m
495.832 1316.67 l
S
3258.33 1316.67 m
3230 1316.67 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 32.8332 128] Tm
0 0 Td
/F8_0 10 Tf
(80)
[5.56
0
5.56
0] Tj
Q
468.332 1588.33 m
495.832 1588.33 l
S
3258.33 1588.33 m
3230 1588.33 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 27.25 155.167] Tm
0 0 Td
/F8_0 10 Tf
(100)
[5.56
0
5.56
0
5.56
0] Tj
Q
468.332 1860 m
495.832 1860 l
S
3258.33 1860 m
3230 1860 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 27.25 182.333] Tm
0 0 Td
/F8_0 10 Tf
(120)
[5.56
0
5.56
0
5.56
0] Tj
Q
468.332 229.168 m
3258.33 229.168 l
S
468.332 1860 m
3258.33 1860 l
S
468.332 229.168 m
468.332 1860 l
S
3258.33 229.168 m
3258.33 1860 l
S
/DeviceGray {} cs
[1] sc
1951.67 1288.33 1257.5 521.668 re
f*
/DeviceGray {} CS
[1] SC
1951.67 1288.33 1257.5 521.67 re
S
/DeviceGray {} CS
[0] SC
1951.67 1288.33 m
3209.17 1288.33 l
S
1951.67 1810 m
3209.17 1810 l
S
1951.67 1288.33 m
1951.67 1810 l
S
3209.17 1288.33 m
3209.17 1810 l
S
1951.67 1288.33 m
3209.17 1288.33 l
S
1951.67 1288.33 m
1951.67 1810 l
S
1951.67 1288.33 m
3209.17 1288.33 l
S
1951.67 1810 m
3209.17 1810 l
S
1951.67 1288.33 m
1951.67 1810 l
S
3209.17 1288.33 m
3209.17 1810 l
S
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 231.583 169.667] Tm
0 0 Td
/F8_0 10 Tf
(Correct-Correct)
[7.22
0
5.56
0
3.33
0
3.33
0
5.56
0
5
0
2.78
0
5.84
0
7.22
0
5.56
0
3.33
0
3.33
0
5.56
0
5
0
2.78
0] Tj
Q
Q
q
1951.67 1287.5 1258.33 522.5 re
W
/DeviceRGB {} cs
[0 0 0.5625] sc
2007.5 1688.33 279.168 88.3359 re
f*
Q
q
0 9.16797 3600 2000.83 re
W
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 231.583 157.5] Tm
0 0 Td
/F8_0 10 Tf
(Correct-Incorrect)
[7.22
0
5.56
0
3.33
0
3.33
0
5.56
0
5
0
2.78
0
5.84
0
2.78
0
5.56
0
5
0
5.56
0
3.33
0
3.33
0
5.56
0
5
0
2.78
0] Tj
Q
Q
q
1951.67 1287.5 1258.33 522.5 re
W
/DeviceRGB {} cs
[0 0.875 1] sc
2007.5 1565.83 279.168 89.168 re
f*
Q
q
0 9.16797 3600 2000.83 re
W
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 231.583 145.25] Tm
0 0 Td
/F8_0 10 Tf
(Incorrect-Correct)
[2.78
0
5.56
0
5
0
5.56
0
3.33
0
3.33
0
5.56
0
5
0
2.78
0
5.84
0
7.22
0
5.56
0
3.33
0
3.33
0
5.56
0
5
0
2.78
0] Tj
Q
Q
q
1951.67 1287.5 1258.33 522.5 re
W
/DeviceRGB {} cs
[1 0.8125 0] sc
2007.5 1444.17 279.168 89.1641 re
f*
Q
q
0 9.16797 3600 2000.83 re
W
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 231.583 133.083] Tm
0 0 Td
/F8_0 10 Tf
(Incorrect-Incorrect)
[2.78
0
5.56
0
5
0
5.56
0
3.33
0
3.33
0
5.56
0
5
0
2.78
0
5.84
0
2.78
0
5.56
0
5
0
5.56
0
3.33
0
3.33
0
5.56
0
5
0
2.78
0] Tj
Q
Q
q
1951.67 1287.5 1258.33 522.5 re
W
/DeviceRGB {} cs
[0.5 0 0] sc
2007.5 1322.5 279.168 88.332 re
f*
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font WYROHS+Helvetica
%%EOF
